(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const c of i)if(c.type==="childList")for(const s of c.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function n(i){const c={};return i.integrity&&(c.integrity=i.integrity),i.referrerpolicy&&(c.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?c.credentials="include":i.crossorigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function o(i){if(i.ep)return;i.ep=!0;const c=n(i);fetch(i.href,c)}})();window.windowConfig=null;window.compactWindow=function(){function e(){window.innerWidth<1225?document.body.setAttribute("compact",""):document.body.removeAttribute("compact")}e(),window.removeEventListener("resize",e),window.addEventListener("resize",e)};window.loadWindowConfig=async function(){window.windowConfig=await window.go.main.App.LoadWindowConfig(),console.log("Window Config:",window.windowConfig);const e=window.windowConfig["color-scheme"]||{},t=Object.entries(e).find(([c,s])=>s===!0);t&&document.body.setAttribute("color-scheme",t[0]);const n=document.getElementById("selectScheme");n&&(n.innerHTML="",Object.keys(e).forEach(c=>{const s=document.createElement("option");s.value=c,s.textContent=c,t&&c===t[0]&&(s.selected=!0),n.appendChild(s)}),n.addEventListener("change",c=>{const s=c.target.value;window.setColorScheme(s)}));const o=window.windowConfig["sidebar-state"]||"",i=document.querySelector(".sidebar");o==="collapsed"?i.setAttribute("collapsed",""):i.removeAttribute("collapsed")};window.setColorScheme=async function(e){!window.windowConfig||(Object.keys(window.windowConfig["color-scheme"]).forEach(t=>window.windowConfig["color-scheme"][t]=!1),window.windowConfig["color-scheme"].hasOwnProperty(e)&&(window.windowConfig["color-scheme"][e]=!0),document.body.setAttribute("color-scheme",e),await window.go.main.App.UpdateWindowConfig(window.windowConfig))};window.loadWindowConfig();let z=!1,x=null;const N=document.getElementById("log"),K=document.getElementById("error"),y=document.getElementById("init"),r=document.getElementById("gitConsole"),f=document.getElementById("toggleConsoleBtn");function a(e){N.textContent=e,console.log(e)}function l(e){K.textContent=e,console.error(e)}function M(...e){const t=e.map(n=>typeof n=="object"?JSON.stringify(n):n).join(" ");r.value+=t+`
`,r.scrollTop=r.scrollHeight}["log","error","warn","info"].forEach(e=>{const t=console[e];console[e]=(...n)=>{t(...n),M(...n)}});window.runtime.EventsOn("logToGitConsole",e=>{r.value+=e+`
`,r.scrollTop=r.scrollTop});f==null||f.addEventListener("click",()=>{r.style.display==="none"?(r.style.display="block",f.textContent="Hide Console"):(r.style.display="none",f.textContent="Show Console")});async function Z(){a("Detecting OS...");const e=await window.go.main.App.GetOS();return await d(800),a(`Operating System detected: ${e}`),await d(200),e||l("Couldnt detect operating system.."),e==="darwin"&&document.body.classList.add("darwin"),e}async function J(){a("Checking if git is installed...");const e=await window.go.main.App.IsGitInstalled();return e||l("Git is not installed. Go get it!"),await d(200),e}async function Q(){a("Searching for configuration...");let e=await window.go.main.App.CheckConfigExists();return e?a("Configuration found."):(a("Configuration missing, creating new one.."),await window.go.main.App.CreateConfig(),a("Configuration created."),e=!0),await d(200),e}async function X(){a("Validating configuration...");const e=await window.go.main.App.ValidateConfig();return e?(x=e,a("Validated.")):l("Configuration invalid.."),await d(300),e}function d(e){return new Promise(t=>setTimeout(t,e))}async function P(){try{const e=await Z(),t=await J(),n=await Q();await X()&&t||x?(z=!0,a("Ready."),await d(2e3),y.classList.remove("initializing"),u(),y.classList.add("doneinit"),await d(1e3),y.classList.add("initted")):l(t?"Init failure. What a bummer..":"Git required for gituserChrome...")}catch(e){l("Init failed: "+e.message)}}P();window.compactWindow();const q=document.querySelector(".nav-sidebar"),m=document.querySelector(".sidebar");q&&m&&q.addEventListener("click",()=>{let e="";m.hasAttribute("collapsed")?(m.removeAttribute("collapsed"),e=""):(m.setAttribute("collapsed",""),e="collapsed"),window.windowConfig&&(window.windowConfig["sidebar-state"]=e,window.go.main.App.UpdateWindowConfig(window.windowConfig))});const Y={".nav-setup":document.querySelectorAll(".nav-setup.nav-entry"),".nav-fcss":document.querySelectorAll(".nav-fcss.nav-entry"),".nav-git":document.querySelectorAll(".nav-git.nav-entry"),".nav-settings":document.querySelectorAll(".nav-settings.nav-entry"),".nav-more":document.querySelectorAll(".nav-more.nav-entry")};Object.entries(Y).forEach(([e,t])=>{t.forEach(n=>{n.addEventListener("click",()=>p(e))})});function p(e){if(!e)return;const t=e.startsWith(".")?e.slice(1):e;document.querySelectorAll(".nav-entry[selected]").forEach(n=>{n.removeAttribute("selected")}),document.querySelectorAll(`.nav-entry.${t}`).forEach(n=>{n.setAttribute("selected","")}),document.querySelectorAll(".page[selected]").forEach(n=>{n.removeAttribute("selected")}),document.querySelectorAll(`.page.${t}`).forEach(n=>{n.setAttribute("selected","")})}const $=document.getElementById("git_is"),v=document.getElementById("os_is"),C=document.getElementById("firefox_is"),b=document.getElementById("selected_profile"),w=document.getElementById("selected_theme"),j=document.getElementById("apply_userjs"),R=document.getElementById("allow_restart"),V=document.getElementById("backup_chrome");async function u(){const e=await window.go.main.App.ValidateConfig();if(!e){console.log("Config not found."),console.debug("connectConfig: Config not found.",e);return}if(console.debug("connectConfig: Config found.",e),$&&($.checked=e.git_is),j&&(j.checked=e.apply_userjs),R&&(R.checked=e.allow_restart),V&&(V.checked=e.backup_chrome),v&&(v.innerHTML="",["windows","darwin","linux"].forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t.charAt(0).toUpperCase()+t.slice(1),e.os_is===t&&(n.selected=!0),v.appendChild(n)})),C&&(C.innerHTML="",Object.keys(e.firefoxs).forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.firefox_is===t&&(n.selected=!0),C.appendChild(n)})),b&&(b.innerHTML="",e.firefox_profiles.forEach(t=>{const n=document.createElement("option");n.value=t,n.textContent=t,e.selected_profile===t&&(n.selected=!0),b.appendChild(n)})),w){w.innerHTML="";const t=document.createElement("option");t.value="placeholder",t.textContent="-- Select a theme --",t.disabled=!0,t.selected=!e.selected_theme,w.appendChild(t),Object.keys(e.saved_themes).forEach(n=>{const o=document.createElement("option");o.value=n,o.textContent=n,e.selected_theme===n&&(o.selected=!0),w.appendChild(o)})}window.globalConfig=e}async function U(e,t){if(!window.globalConfig){console.debug("updateConfigValue: globalConfig is undefined");return}window.globalConfig[e]=t;try{await window.go.main.App.WriteToConfig(e,t),console.log(`Config updated: ${e} = ${t}`)}catch(n){console.error("updateConfigValue: failed to write to config:",n)}}function ee(){const e=document.querySelector(".nav-setup .page-container");if(!e){console.debug("attachConfigListeners: can't attach listeners to nav-setup page");return}e.querySelectorAll("select").forEach(t=>{console.debug("Attaching listener to select:",t.id),t.addEventListener("change",()=>{console.debug("attachConfigListeners: change detected"),U(t.id,t.value)})}),e.querySelectorAll("input").forEach(t=>{console.debug("Attaching listener to input:",t.id),t.addEventListener("change",()=>{let n;t.type==="checkbox"?n=t.checked:n=t.value,console.debug(`attachConfigListeners: input ${t.id} changed to`,n),U(t.id,n)})})}(async function(){try{await u(),ee()}catch{}})();let G=!1;document.querySelector(".nav-settings");const H=document.getElementById("saveSettingsBtn"),T={fsFBinary:["Firefox","fsFBinary","fsFBinaryInput"],fsFdBinary:["Firefox Developer Edition","fsFdBinary","fsFdBinaryInput"],fsFnBinary:["Firefox Nightly","fsFnBinary","fsFnBinaryInput"],fsLBinary:["Librewolf","fsLBinary","fsLBinaryInput"],fsZBinary:["Zen Browser","fsZBinary","fsZBinaryInput"],fsFloorpBinary:["Floorp","fsFloorpBinary","fsFloorpBinaryInput"],fsProfile:[null,"fsProfile","fsProfileInput"]};async function te(){const e=window.globalConfig;if(!e){console.error("Attempt to connect to settings config failed..");return}console.debug("Settings Configuration:",e);for(const[n,[o,i,c]]of Object.entries(T)){const s=document.getElementById(c);!s||(s.value=o&&e.firefoxs[o]||"",console.debug(`Settings cfg ${o}:`,s.value))}const t=document.getElementById("selectTheme");if(t){const n=e.selected_theme;n&&e.saved_themes[n]?(t.value=e.saved_themes[n],t.dataset.theme=n):(t.value="",t.dataset.theme=""),console.debug("Settings cfg theme input value:",t.value)}}const E=document.getElementById("addTheme"),A=document.getElementById("removeTheme");function O(e){if(e=e.trim(),!e)return null;let t,n;!e.startsWith("http://")&&!e.startsWith("https://")&&(e="https://"+e);try{const o=new URL(e);if(n=o.href,!["github.com","gitlab.com","codeberg.org"].includes(o.hostname))return null;const c=o.pathname.split("/").filter(Boolean);if(c.length<2)return null;t=c[1]}catch{return null}return{name:t,url:n}}function D(e,t,n){return Object.entries(e.saved_themes).some(([o,i])=>o===t||i===n)}async function ne(e,t,n,o){e.saved_themes[t]=n,e.selected_theme=t,await window.go.main.App.WriteToConfig(`saved_themes.${t}`,n),await window.go.main.App.WriteToConfig("selected_theme",t),o.value="",o.dataset.theme="",await u(),console.log(`Theme added: ${t} => ${n}`)}async function oe(e,t,n){await window.go.main.App.RemoveFromConfig(`saved_themes.${t}`),delete e.saved_themes[t],Object.keys(e.saved_themes).length===0?(e.saved_themes["ff-ultima"]="https://github.com/soulhotel/ff-ultima",e.selected_theme="ff-ultima",await window.go.main.App.WriteToConfig("saved_themes.ff-ultima",e.saved_themes["ff-ultima"]),await window.go.main.App.WriteToConfig("selected_theme","ff-ultima"),n.value="",n.dataset.theme=""):(e.selected_theme=Object.keys(e.saved_themes)[0],await window.go.main.App.WriteToConfig("selected_theme",e.selected_theme),n.value="",n.dataset.theme=""),await u(),console.log(`Theme removed: ${t}`)}E==null||E.addEventListener("click",async()=>{const e=window.globalConfig,t=document.getElementById("selectTheme");if(!e||!t)return;const n=O(t.value);if(!n)return;const{name:o,url:i}=n;if(D(e,o,i)){console.log("Theme already saved."),t.value="";return}await ne(e,o,i,t)});A==null||A.addEventListener("click",async()=>{const e=window.globalConfig,t=document.getElementById("selectTheme");if(!e||!t)return;const n=O(t.value);if(!n)return;const{name:o,url:i}=n;if(!D(e,o,i)){console.log("Theme not found."),t.value="";return}await oe(e,o,t)});function ie(){for(const[e,[t,n,o]]of Object.entries(T)){const i=document.getElementById(n),c=document.getElementById(o);!i||!c||i.addEventListener("click",async()=>{const s=await window.go.main.App.SelectFile();if(!!s&&s){const g=window.globalConfig;if(!g)return;if(t)c.value=s,g.firefoxs[t]=s,await window.go.main.App.WriteToConfig(`firefoxs.${t}`,s);else if(e==="fsProfile"){const h=s.split(/[/\\]/).pop();c.value=h,g.selected_profile=h,await window.go.main.App.WriteToConfig("selected_profile",h);const W=Math.max(s.lastIndexOf("/"),s.lastIndexOf("\\")),F=W>=0?s.slice(0,W):s;g.profile_base=F,await window.go.main.App.WriteToConfig("profile_base",F)}console.log(`Updated config for ${e}:`,s)}})}}const I=document.getElementById("openConf"),B=document.getElementById("resetConf"),_=document.getElementById("deleteConf"),k=document.getElementById("openProfiles");I==null||I.addEventListener("click",async()=>{try{await window.go.main.App.OpenConfig()}catch(e){console.error("Error opening config:",e)}});B==null||B.addEventListener("click",async()=>{try{await window.go.main.App.ResetConfig(),p(".nav-git"),r.value="",console.log("Config deleted. Re-initializing..."),await P()}catch(e){console.error("Error resetting config:",e)}});_==null||_.addEventListener("click",async()=>{try{await window.go.main.App.DeleteConfig()}catch(e){console.error("Error deleting config:",e)}});k==null||k.addEventListener("click",async()=>{try{await window.go.main.App.OpenProfiles()}catch(e){console.error("Error opening profile path",e)}});function se(){!H||H.addEventListener("click",async()=>{const e=window.globalConfig;if(!e)return;for(const[n,[o,i,c]]of Object.entries(T)){const s=document.getElementById(c);!s||(o?(e.firefoxs[o]=s.value,await window.go.main.App.WriteToConfig(`firefoxs.${o}`,s.value)):s.value.trim()&&(e.firefox_profiles.includes(s.value.trim())||(e.firefox_profiles.push(s.value.trim()),await window.go.main.App.WriteToConfig("firefox_profiles",e.firefox_profiles),s.value="")))}const t=document.getElementById("selectTheme");if(t){const n=O(t.value);if(n){const{name:o,url:i}=n;!e.saved_themes[o]&&!Object.values(e.saved_themes).includes(i)?(e.saved_themes[o]=i,await window.go.main.App.WriteToConfig(`saved_themes.${o}`,i),console.log(`Theme added via Save & Exit: ${o} => ${i}`)):console.log(`Theme already in saved_themes: ${o}`)}t.value="",t.dataset.theme=""}await u(),p(".nav-setup"),console.log("Configuration updated."),console.debug("CONFIG SAVED",e)})}const L=document.querySelectorAll(".nav-settings");L==null||L.forEach(e=>{e.addEventListener("click",async()=>{G||(await te(),ie(),se(),G=!0)})});const S=document.getElementById("submitgitBtn"),ce=document.getElementById("status");async function ae(){p(".nav-git"),r.value="",a("Validating configuration...");const e=await window.go.main.App.ValidateConfig();e||l("Configuration invalid.."),x=e,a("Validated."),ce.value="";try{await window.go.main.App.ProcessGit()}catch(t){l("Error processing theme: "+t.message),M("Error processing theme: "+t.message)}return e}S==null||S.addEventListener("click",async()=>{await ae()});document.getElementById("link-gituserChrome").onclick=()=>{window.go.main.App.BrowserOpenURL("https://github.com/soulhotel/git-userChrome")};document.getElementById("link-css-store").onclick=()=>{window.go.main.App.BrowserOpenURL("https://firefoxcss-store.github.io/")};document.getElementById("link-css-subreddit").onclick=()=>{window.go.main.App.BrowserOpenURL("https://www.reddit.com/r/firefoxcss")};document.getElementById("link-support").onclick=()=>{window.go.main.App.BrowserOpenURL("https://github.com/sponsors/soulhotel")};document.getElementById("link-git").onclick=()=>{window.go.main.App.BrowserOpenURL("https://github.com/soulhotel/git-userChrome?tab=readme-ov-file#need-git-click-here")};
